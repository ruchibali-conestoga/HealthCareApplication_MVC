<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Patient Management System</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        .pagination button { margin: 5px; }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h1 class="text-center">Patient Management System</h1>

        <!-- Search and Export -->
        <div class="d-flex justify-content-between mb-3">
            <input type="text" id="searchInput" class="form-control w-50" placeholder="Search patients...">
            <button class="btn btn-success" onclick="exportCSV()">Export to CSV</button>
        </div>

        <!-- Add Patient Button -->
        <button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#patientModal" onclick="clearForm()">Add New Patient</button>

        <!-- Patient Table -->
        <div id="patientTableContainer">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th onclick="sortTable(0)">ID</th>
                        <th onclick="sortTable(1)">Name</th>
                        <th onclick="sortTable(2)">Age</th>
                        <th>Gender</th>
                        <th>Contact</th>
                        <th>Address</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="patientTableBody"></tbody>
            </table>
        </div>
        <div class="pagination text-center" id="pagination"></div>

        <!-- Add/Edit Modal -->
        <div class="modal fade" id="patientModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 id="modalTitle">Add/Edit Patient</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="patientForm">
                            <input type="hidden" id="patientId">
                            <input type="text" class="form-control mb-2" id="patientName" placeholder="Name" required>
                            <input type="number" class="form-control mb-2" id="patientAge" placeholder="Age" required>
                            <select class="form-control mb-2" id="patientGender" required>
                                <option value="">Select Gender</option>
                                <option value="Male">Male</option>
                                <option value="Female">Female</option>
                                <option value="Other">Other</option>
                            </select>
                            <input type="text" class="form-control mb-2" id="patientContact" placeholder="Contact" required>
                            <input type="text" class="form-control mb-2" id="patientAddress" placeholder="Address" required>
                            <button type="button" class="btn btn-primary" onclick="savePatient()">Save</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <script>
            let patients = JSON.parse(localStorage.getItem("patients")) || [];
            let nextId = patients.length ? Math.max(...patients.map(p => p.id)) + 1 : 1;
            let currentPage = 1;
            const rowsPerPage = 5;

            function renderTable() {
                const tbody = document.getElementById("patientTableBody");
                tbody.innerHTML = "";
                let filteredPatients = patients.filter(p =>
                    Object.values(p).some(value => value.toString().toLowerCase().includes(document.getElementById("searchInput").value.toLowerCase()))
                );

                let start = (currentPage - 1) * rowsPerPage;
                let paginatedPatients = filteredPatients.slice(start, start + rowsPerPage);

                paginatedPatients.forEach(patient => {
                    tbody.innerHTML += `<tr>
                        <td>${patient.id}</td>
                        <td>${patient.name}</td>
                        <td>${patient.age}</td>
                        <td>${patient.gender}</td>
                        <td>${patient.contact}</td>
                        <td>${patient.address}</td>
                        <td>
                            <button class='btn btn-warning btn-sm' onclick='editPatient(${JSON.stringify(patient)})'>Edit</button>
                            <button class='btn btn-danger btn-sm' onclick='deletePatient(${patient.id})'>Delete</button>
                        </td>
                    </tr>`;
                });
                renderPagination(filteredPatients.length);
            }

            function renderPagination(totalItems) {
                let totalPages = Math.ceil(totalItems / rowsPerPage);
                let paginationDiv = document.getElementById("pagination");
                paginationDiv.innerHTML = "";
                for (let i = 1; i <= totalPages; i++) {
                    paginationDiv.innerHTML += `<button class='btn btn-sm btn-outline-primary' onclick='changePage(${i})'>${i}</button>`;
                }
            }

            function changePage(page) { currentPage = page; renderTable(); }

            function savePatient() {
                const id = document.getElementById("patientId").value;
                const name = document.getElementById("patientName").value;
                const age = document.getElementById("patientAge").value;
                const gender = document.getElementById("patientGender").value;
                const contact = document.getElementById("patientContact").value;
                const address = document.getElementById("patientAddress").value;

                if (id) {
                    patients = patients.map(p => p.id == id ? { id: Number(id), name, age, gender, contact, address } : p);
                } else {
                    patients.push({ id: nextId++, name, age, gender, contact, address });
                }
                localStorage.setItem("patients", JSON.stringify(patients));
                renderTable();
                $('#patientModal').modal('hide');
            }

            function editPatient(patient) {
                document.getElementById("patientId").value = patient.id;
                document.getElementById("patientName").value = patient.name;
                document.getElementById("patientAge").value = patient.age;
                document.getElementById("patientGender").value = patient.gender;
                document.getElementById("patientContact").value = patient.contact;
                document.getElementById("patientAddress").value = patient.address;
                $('#patientModal').modal('show');
            }

            function deletePatient(id) {
                if (confirm("Are you sure?")) {
                    patients = patients.filter(p => p.id !== id);
                    localStorage.setItem("patients", JSON.stringify(patients));
                    renderTable();
                }
            }

            function exportCSV() { console.log("Exporting to CSV"); }

            document.getElementById("searchInput").addEventListener("input", renderTable);
            renderTable();
        </script>
    </div>
</body>
</html>
